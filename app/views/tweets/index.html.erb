<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
	"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
	<title>index.html</title>
	  <style type="text/css" media="screen">
	   *{
  	   font-family: "Eigerdals black","Arial Rounded MT Bold","Trebuchet MS",Trebuchet,sans-serif
	   }
	  </style>
	  <%= javascript_include_tag("raphael-min.js", "g.raphael-min.js", "g.line-min.js")%>
    <script type="text/javascript">
        var processingMap = function(value, istart, istop, ostart, ostop) {
          return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
        };
    
    
    
        var line_numbers = <%= raw Tweet.numbers %>;
        var blue = "hsb(0.6, 1, 0.75)";
        var green = "hsb(0.5, 0.25, 1)";
        
        var x_values = [];
        var line_dates = <%= raw Tweet.dates%>
        var date_axis = [] 
        for (var i=1; i < line_numbers.length + 1; i++) {
          date = new Date(line_dates[i]);
          if ((date.getMinutes() % 10) == 0) {
            date_axis.push({x:i, date:date})
          };
          x_values.push(i);
        };
        // console.log(line_dates);
        // console.log(line_numbers);
        // console.log(x_values);
        window.onload = function() {
            // Creates canvas 640 Ã— 480 at 10, 50
            var width = 1000;
            var height = 180
            var r = Raphael(document.getElementById("graph"), width, height);

            // Draws line seperator and time
            var divider = width / 6
            for (var i=1; i < date_axis.length; i++) {
              var divider_x = i * divider;
              var divider_date = date_axis[i].date;
              r.path("M" + divider_x + " 0" + "L" + divider_x + " " + (height - 20) ).attr({stroke:"hsb(0.5, 0.25, 1)"});
              r.text(divider_x, height - 10, divider_date.getHours() + ":" + divider_date.getMinutes());
            };
            
            
            var mentioned = <%= raw @mentions_summary.to_json %>;
            // Creates a simple line chart at 10, 10
            // width 300, height 220
            // x-values: [1,2,3,4,5], y-values: [10,20,15,35,30]
            var linec = r.g.linechart(10,10,1000,150,x_values,line_numbers, { "symbol":"o", "colors":["cornflowerblue"]});
            var figure = null;
            linec.hover(function() {
              h = this;
              figure = r.text(this.x , this.y, this.value);
              this.symbol.attr({'fill':'white'});
            }, function() {
              figure.remove();
              this.symbol.attr({'fill':'cornflowerblue'});
            });

            var rr = Raphael(document.getElementById("bubble"), width, height);
            var space = width * 0.9 / mentioned.length;
            for (var i=0; i < mentioned.length; i++) {
              var m = mentioned[i]
              if (m[2]) {
                var color = green;
              }else{
                var color = blue;
              };
              
              var mark_size = processingMap(m[1], 25,111 , 5, 20)
              var mark_x = 50 + (i * space);
              var mark_y = Math.floor(Math.random()*(height * 0.9));
              cc = rr.circle(mark_x, mark_y, mark_size).attr({
                  fill: color,
                  stroke: "hsb(0.5, 0.25, 1)"
              });
              if (m[2]) {
                var href = JSON.parse(m[2].schedule.content).href;
                cc.attr({href:href})
              };
              if (mark_size > 3) {
                tt = rr.text(mark_x,mark_y,  m[0]);
              };
              
            };
            // cc = rr.circle(100, 100, 20).attr({
            //     fill: "hsb(0.6, 1, 0.75)",
            //     stroke: "hsb(0.5, 0.25, 1)"
            // });
            // var rect = null;
            // var tt = null;
            // cc.hover(function (event) {
            //     console.log(this);
            //     this.attr({fill: "hsb(0.6, 1, 0.85)"});
            //     rect = rr.rect(this.attrs.cx - 10, this.attrs.cy - 10, this.attrs.cx - 30, this.attrs.cy - 30, 10).attr({
            //       fill: "hsb(0.5, 0.25, 1)",
            //       stroke: "hsb(0.6, 1, 0.75)",
            //       href: "foo"
            //     });
            //     tt = rr.text(this.attrs.cx + 10, this.attrs.cy + 10, "hello");
            // }, function (event) {
            //     this.attr({fill: "hsb(0.6, 1, 0.75)"});
            //     rect.remove();
            //     tt.remove();
            // });
            
        }
    </script>
</head>

<body>
  <h1>SXSW Twitter bubblymap</h1>
  <h2>
    <%= @tweets.first.tweeted_at.getlocal.to_s(:short) %> 
    to <%= @tweets.last.tweeted_at.getlocal.to_s(:short) %>
  (
  <%= @tweets.first.tweeted_at.in_time_zone("Central Time (US & Canada)").to_s(:short) %> 
  to <%= @tweets.last.tweeted_at.in_time_zone("Central Time (US & Canada)").to_s(:short) %>
  in Austin, TX
  )
  </h2>
  <div id="bubble"></div>
  <div id="graph" style="width:1000px;height:180px;border:1px dashed #CCC;"></div>
  <hr/>
</body>
</html>
